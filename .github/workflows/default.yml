name: Default workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - docker
  pull_request:
    branches:
      - main
      - docker

defaults:
  run:
    shell: bash

jobs:
  full:
    name: Full (Build, Validate, Test)

    runs-on: ubuntu-18.04
    container:
      image: devwithlando/php:7.4-fpm-4

    services:
      appserver:
        run_as_root:
          - wget https://dl-ssl.google.com/linux/linux_signing_key.pub && apt-key add linux_signing_key.pub
          - add-apt-repository "deb http://dl.google.com/linux/chrome/deb/ stable main"
          - apt-get -y update && apt-get -y install google-chrome-stable
      database:
        image: mariadb
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      CI: GITHUB_ACTIONS
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER_PASSWORD: drupal
      MYSQL_USER_NAME: drupal
      MYSQL_DATABASE_NAME: drupal
      MYSQL_HOST: database

    steps:
      - name: Prepare environment variables
        run: |
          echo "GITHUB_REF_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "COMPOSER_BIN=$(echo ${GITHUB_WORKSPACE}/vendor/bin)" >> $GITHUB_ENV
          echo "BLT_DIR=$(echo ${GITHUB_WORKSPACE}/vendor/acquia/blt)" >> $GITHUB_ENV
          echo "SCRIPT_DIR=$(echo ${GITHUB_WORKSPACE}/blt/scripts/github-actions)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Composer install
        run: |
          composer validate --no-check-all --ansi
          composer install --no-interaction || composer install --no-interaction || composer install --no-interaction

      - name: Prepare bin executables
        run: |
          ln -s ${GITHUB_WORKSPACE}/vendor/acquia/blt/bin/blt /usr/local/bin/blt
          ln -s ${GITHUB_WORKSPACE}/vendor/drush/drush/drush /usr/local/bin/drush

      - name: Cache dependencies installed with Composer
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v2
        with:
          path: |
            "${{ steps.composer-cache.outputs.dir }}"
            ~/.drush/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: Setup environment
        run: bash ${SCRIPT_DIR}/setup_env.sh

      - name: Setup app
        run: bash ${SCRIPT_DIR}/setup_app.sh

      - name: Test app
        run: bash ${SCRIPT_DIR}/test_app.sh
